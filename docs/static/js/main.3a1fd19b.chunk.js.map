{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["IdolButton","_this","this","style","borderColor","idolData","props","idol","color","selectedIdols","indexOf","react_default","a","createElement","className","concat","classNameSuffix","id","onClick","onClickHandler","screenName","React","Component","IdolsSelect","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filterType","type","filter","v","setState","push","_this3","checked","onChange","setFilter","_this4","buttons","idols","map","index","App_IdolButton","key","filterButtonBuilder","UnitItem","_this5","unitMember","unitToIdol","unitName","unit","sort","b","memberButtons","member","i","toggleClickHandler","completeClassName","length","App","_this6","listIdols","keys","idolToUnit","selectedUnits","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","unitSortIndex","u","match","score","name","console","log","e","selected","slice","units","updateSelectedUnits","_this7","notSelectedIdols","toggleIdol","Math","floor","random","suffix","_this8","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","App_UnitItem","setClassNameSuffix","addRandomIdol","App_IdolsSelect","href","target","rel","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a1fd19b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './App.icon.css';\nimport './App.small.css';\nimport './idolIcon.css';\nimport './App.color.css';\n\nimport unitToIdol  from \"./unitToIdol.json\";\nimport idolToUnit  from \"./idolToUnit.json\";\nimport unitName    from \"./unitName.json\"\nimport idolData from \"./idolData.json\";\n\nclass IdolButton extends React.Component {\n  render() {\n    var style = {\n      borderColor: idolData[this.props.idol].color\n    }\n    if(this.props.selectedIdols.indexOf(this.props.idol) !== -1){\n      style[\"backgroundColor\"] = idolData[this.props.idol].color\n    }\n\n    return (\n      <div\n        className={`idolBox${this.props.classNameSuffix}`}\n        id={this.props.idol}\n        style={style} onClick={()=>{\n          this.props.onClickHandler(this.props.idol);\n        }}\n      >\n        <div className=\"boxContainer\">\n          <div className={`idolImage${this.props.classNameSuffix} idolIcon-${this.props.idol}`}></div>\n          <div className={`idolNameBox${this.props.classNameSuffix}`}>\n            {idolData[this.props.idol].screenName}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass IdolsSelect extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      filterType: [\"princess\", \"fairy\", \"angel\"],\n    }\n  }\n\n  setFilter(type){\n    if(this.state.filterType.indexOf(type) !== -1){\n      const filterType = this.state.filterType.filter(v=>v!==type)\n      this.setState({filterType: filterType})\n    }else{\n      const filterType = this.state.filterType\n      filterType.push(type)\n      this.setState({filterType: filterType})\n    }\n  }\n  \n  filterButtonBuilder(type){\n    return(\n      <label>\n        <div\n          className={`filterCheckboxType filterCheckbox-${type} ${(this.state.filterType.indexOf(type)!==-1)?\"checked\":\"\"}`}\n        >\n          <div className=\"typeNameBox\">\n            <input\n              type=\"checkbox\"\n              checked={(this.state.filterType.indexOf(type)!==-1)?\"checked\":\"\"}\n              onChange={()=>this.setFilter(type)}\n            />\n            {type}\n          </div>\n        </div>\n      </label>\n    )\n  }\n\n  render() {\n    const buttons = this.props.idols.map((idol, index) => {\n      if(this.state.filterType.indexOf(idolData[idol].type) === -1){\n        if(this.state.filterType.indexOf(\"selecting\") === -1 ||\n           this.props.selectedIdols.indexOf(idol) === -1){\n          return null\n        }\n      }\n      return(\n        <IdolButton\n          key={index}\n          selectedIdols={this.props.selectedIdols}\n          idol={idol}\n          classNameSuffix={this.props.classNameSuffix}\n          onClickHandler={(idol)=>this.props.onClickHandler(idol)}\n        />\n      );\n    });\n    return (\n      <div className=\"idolView\">\n        <form>\n          {this.filterButtonBuilder(\"princess\")}\n          {this.filterButtonBuilder(\"fairy\")}\n          {this.filterButtonBuilder(\"angel\")}\n          {this.filterButtonBuilder(\"selecting\")}\n        </form>\n        {buttons}\n      </div>\n    );\n  }\n}\n\nclass UnitItem extends React.Component {\n  render(){\n    const unitMember = unitToIdol[unitName[this.props.unit]]\n    unitMember.sort((a,b)=>{\n      return (this.props.selectedIdols.indexOf(b)!==-1)?1:-1\n    })\n    const memberButtons = unitMember.map((member, i) => {\n      return(\n        <IdolButton\n          key={i}\n          selectedIdols={this.props.selectedIdols}\n          idol={member}\n          classNameSuffix={this.props.classNameSuffix}\n          onClickHandler={(idol)=>this.props.toggleClickHandler(idol)}\n        />\n      )\n    });\n    const selectedMember = unitMember.filter(idol=>this.props.selectedIdols.indexOf(idol)!==-1)\n    const completeClassName = (selectedMember.length === unitMember.length)?\"unitComplete\":\"\"\n\n    return(\n      <div key={this.props.unit} className={`unitTable${this.props.classNameSuffix} ${completeClassName}`}>\n        <div className={`unitNameView${this.props.classNameSuffix}`}>\n          <div className={`unitNameBox${this.props.classNameSuffix}`}>\n            {unitName[this.props.unit]}\n          </div>\n        </div>\n        <div className=\"unitIdolView\">\n          {memberButtons}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      listIdols: Object.keys(idolToUnit),\n      selectedIdols: [],\n      selectedUnits: [],\n      classNameSuffix: \"\",\n    }\n  }\n\n  updateSelectedUnits(idols){\n    const selectedUnits = []\n    for(const idol of idols){\n      for(const unit of idolToUnit[idol]){\n        if(selectedUnits.indexOf(unit) === -1){\n          selectedUnits.push(unit)\n        }\n      }\n    }\n    var unitSortIndex = selectedUnits.map((u,index)=>{\n      var match = 0\n      var score = 0\n      unitToIdol[unitName[u]].map((i)=>{\n        //ユニットメンバー1人につき1点\n        score += 1\n        //選択済みメンバー1人につき100点\n        if(idols.indexOf(i) !== -1){\n          match ++\n          score += 100\n        }\n        return null\n      })\n      //ユニットメンバー全員選択済みなら10000点\n      if (unitToIdol[unitName[u]].length === match){\n        score += 10000\n      }\n      return {name: unitName[u], index: index, score: score}\n    })\n    unitSortIndex.sort((a,b)=>{return (a.score > b.score)?-1:1})\n    console.log(unitSortIndex)\n    return unitSortIndex.map((e)=>{\n      return selectedUnits[e.index]\n    })\n  }\n  \n  toggleIdol(idol) {\n    if ( this.state.selectedIdols.indexOf(idol) === -1 ){\n      const selected = this.state.selectedIdols.slice()\n      selected.push(idol);\n      const units = this.updateSelectedUnits(selected)\n      this.setState({ selectedIdols: selected, selectedUnits: units });\n    } else {\n      const selected = this.state.selectedIdols.filter(v=>v!==idol);\n      const units = this.updateSelectedUnits(selected)\n      this.setState({ selectedIdols: selected, selectedUnits: units });\n    }\n  }\n\n  addRandomIdol(){\n    if (this.state.selectedIdols.length === this.state.listIdols.length){\n      return null\n    }\n    const notSelectedIdols = this.state.listIdols.filter(v=>this.state.selectedIdols.indexOf(v)===-1)\n    this.toggleIdol(notSelectedIdols[Math.floor(Math.random()*notSelectedIdols.length)])\n  }\n\n  setClassNameSuffix(suffix){\n    this.setState({classNameSuffix: suffix})\n  }\n\n  render() {\n    const units = [];\n    for(const i of this.state.selectedUnits){\n      units.push(\n        <UnitItem\n          key={i}\n          unit={i}\n          selectedIdols={this.state.selectedIdols}\n          classNameSuffix={this.state.classNameSuffix}\n          toggleClickHandler={(idol)=>this.toggleIdol(idol)}\n        />\n      )\n    }\n\n    return (\n      <div>\n        <div className=\"header\">\n          <div className=\"container\">\n            <div className=\"headerView\">\n              <div className=\"headerTitleView\">\n                <h3 className=\"headerTitleBox\">\n                MILLIONLIVE!-UNIT-SEARCH\n                </h3>\n              </div>\n            <div className=\"headerMenuView\">\n            </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"refineView\">\n              <form>\n                <label>\n                  <div\n                    className=\"changestyleBox\"\n                    onClick={()=>{this.setClassNameSuffix(\"\")}}\n                  >\n                   <div\n                     className=\"changestyleNameBox\"\n                    >\n                      <input type=\"radio\" name=\"styles\" />\n                        Normal\n                   </div>\n                  </div>\n                </label>\n               <label>\n                  <div\n                    className=\"changestyleBox\"\n                    onClick={()=>{this.setClassNameSuffix(\"Small\")}}\n                  >\n                    <div\n                      className=\"changestyleNameBox\"\n                    >\n                      <input type=\"radio\" name=\"styles\" />\n                      Small\n                   </div>\n                  </div>\n                </label>\n                <label>\n                  <div\n                    className=\"changestyleBox\"\n                    onClick={()=>{this.setClassNameSuffix(\"Icon\")}}\n                  >\n                    <div\n                      className=\"changestyleNameBox\"\n                    >\n                      <input type=\"radio\" name=\"styles\" />\n                      Icon\n                    </div>\n                  </div>\n                </label>\n              </form>\n            </div>\n            <button onClick={()=>this.addRandomIdol()} >ランダムに選択</button>\n            <IdolsSelect\n              idols={this.state.listIdols}\n              selectedIdols={this.state.selectedIdols}\n              classNameSuffix={this.state.classNameSuffix}\n              onClickHandler={(idol)=>this.toggleIdol(idol)}\n            />\n            <div className=\"unitView\">\n              <div className={`unitList${this.state.classNameSuffix}`}>\n                {units}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <div className=\"container\">\n            <hr />\n            <center>\n              <p>Copyright (c) 2019 雪んこ茶房</p>\n              <p><a href=\"https://github.com/yukinko-tea-room/milli-uni\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\n              <p>The copyright to THE IDOLM@STER contents belongs to BANDAI NAMCO Entertainment Inc.</p>\n            </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}